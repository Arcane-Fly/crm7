import { NextRequest, NextResponse } from 'next/server';
import { getAllowances } from '@/lib/services/fairwork/allowances';
import { logger } from '@/lib/logger';

export async function GET(req: NextRequest, { params }: { params: { awardCode: string | null, classificationCode: string | null } }): Promise<NextResponse> {
  const { awardCode, classificationCode } = params;

  if (typeof awardCode !== 'string' || typeof classificationCode !== 'string') {
    return NextResponse.json({ error: 'Invalid parameters' }, { status: 400 });
  }

  try {
    const allowances = await getAllowances(awardCode, classificationCode);
    return NextResponse.json({ allowances });
  } catch (error) {
    logger.error('Failed to fetch allowances', { error });
    return NextResponse.json({ error: 'Failed to fetch allowances' }, { status: 500 });
  }
}
