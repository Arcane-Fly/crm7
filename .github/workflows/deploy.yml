name: Deploy CRM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
  NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}

defaults:
  run:
    shell: bash
    working-directory: ./crm

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_id: ${{ steps.build_step.id }}
      cache_key: ${{ steps.cache_key.outputs.value }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate cache key
        id: cache_key
        run: echo "value=$(date +%s)" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './crm/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        id: build_step
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run build

  test:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Run tests
        run: npm test
        
  deploy-staging:
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to staging
        id: deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BLOB_READ_WRITE_TOKEN: ${{ secrets.BLOB_READ_WRITE_TOKEN }}
        run: |
          echo "Deploying to staging environment"
          echo "url=https://staging.example.com" >> $GITHUB_OUTPUT

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to production
        id: deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BLOB_READ_WRITE_TOKEN: ${{ secrets.BLOB_READ_WRITE_TOKEN }}
          POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
        run: |
          echo "Deploying to production environment"
          echo "url=https://example.com" >> $GITHUB_OUTPUT
